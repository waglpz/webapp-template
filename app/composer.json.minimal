{
  "name": "@PROJECT_NAME@/webapp",
  "description": "@PROJECT_NAME@ Web / Rest API Application",
  "version": "0.1.0",
  "license": "MIT",
  "type": "project",
  "minimum-stability": "dev",
  "prefer-stable": true,
  "config": {
    "process-timeout": 72000,
    "optimize-autoloader": true,
    "apcu-autoloader": true,
    "discard-changes": true,
    "preferred-install": "dist",
    "sort-packages": true,
    "allow-plugins": {
      "dealerdirect/phpcodesniffer-composer-installer": true,
      "phpstan/extension-installer": true
    }
  },
  "require": {
    "php": "^8.3",
    "ext-apcu": "*",
    "ext-fileinfo": "*",
    "ext-intl": "*",
    "ext-json": "*",
    "ext-mbstring": "*",
    "ext-mysqli": "*",
    "ext-pdo": "*",
    "ext-pdo_mysql": "*",
    "waglpz/config": "^2.0",
    "waglpz/di-container": "^2.0"
  },
  "require-dev": {
    "ext-pcntl": "*",
    "doctrine/coding-standard": "^11.1",
    "nette/php-generator": "^4.1",
    "nunomaduro/mock-final-classes": "^1.2",
    "phpstan/extension-installer": "^1.1",
    "phpstan/phpstan": "^1.10",
    "phpstan/phpstan-deprecation-rules": "^1.0",
    "phpstan/phpstan-doctrine": "^1.3",
    "phpstan/phpstan-phpunit": "^1.1",
    "phpstan/phpstan-strict-rules": "^1.5",
    "phpstan/phpstan-symfony": "^1.1",
    "phpstan/phpstan-webmozart-assert": "^1.1",
    "phpunit/phpunit": "^10.0",
    "roave/security-advisories": "dev-latest",
    "squizlabs/php_codesniffer": "^3.7",
    "symfony/var-dumper": "^7.0"
  },
  "autoload": {
    "psr-4": {
      "@PROJECT_NS@\\": "src/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "@PROJECT_NS@\\Tests\\": "tests/"
    }
  },
  "replace": {
  },
    "scripts-descriptions": {
    "waglpz:check:cli": "Runs the CLI command from application context.",
    "waglpz:check:ci": "Runs the normal checks for Continuous Integration (CI).",
    "waglpz:check:normal": "Performs normal checks, including code style check, analysis, and normal tests.",
    "waglpz:code:analyse": "Analyzes the code using PHPStan with the specified configuration and levels.",
    "waglpz:code:style:check": "Checks the code style using PHP CodeSniffer.",
    "waglpz:code:style:fix": "Fixes coding style issues automatically using PHP Code Beautifier and Fixer.",
    "waglpz:generate:password": "Generates a password using the specified script.",
    "waglpz:test:normal": "Runs normal tests using PHPUnit with colors and no coverage report.",
    "waglpz:generate:swagger": "Generates the OpenAPI specification in JSON format and saves it to src/swagger.json.",
    "waglpz:test:coverage": "Runs tests with coverage report using PHPUnit in testdox format.",
    "waglpz:test:ci": "Runs tests for CI without coverage, logging, or caching results.",
    "waglpz:var:dump:server": "Starts the Var Dump Server for viewing the output of dump() calls in the application."
  },
  "scripts": {
    "waglpz:cli": "cli",
    "waglpz:check:ci": [ "@waglpz:check:normal" ],
    "waglpz:check:normal": [
      "@waglpz:code:style:check",
      "@waglpz:code:analyse",
      "@waglpz:test:normal"
    ],
    "waglpz:code:analyse": [ "phpstan analyse --configuration=phpstan.neon config/ src/ tests/ --level max" ],
    "waglpz:code:style:check": "phpcs -p",
    "waglpz:code:style:fix": "phpcbf -p",
    "waglpz:generate:password": "php bin/generate-password.php",
    "waglpz:test:normal": "phpunit --colors=always --no-coverage --order-by random",
    "waglpz:test:coverage": "phpunit --testdox --colors=always",
    "waglpz:test:ci": "phpunit --colors=always --no-coverage --no-logging --do-not-cache-result --order-by random",
    "waglpz:var:dump:server": "var-dump-server",
    "post-install-cmd": [
      "cp -nR vendor/waglpz/config/config/* config/",
      "cp -nR vendor/waglpz/di-container/config/* config/"
    ],
    "post-update-cmd": [
      "cp -nR vendor/waglpz/config/config/* config/",
      "cp -nR vendor/waglpz/di-container/config/* config/"
    ]
  }
}
